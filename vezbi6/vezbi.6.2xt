
//NP-lab.06 Petrina Prentoska INKI958
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define CARDS 52
#define FACES 13
// definiranje na strukturata na kartite
struct card {
const char *face; // pokazuvac kon face (broj na karta (pr: dama))
const char *suit; // pokazuvac kon suit (simbol na karta pr. list)
}; // end struct card
typedef struct card Card; // new type name for struct card
// prototypes
void fillDeck( Card * const wDeck, const char * wFace[],
const char * wSuit[] );
void shuffle( Card * const wDeck );
void deal( const Card * const wDeck );
int main( void )
{
Card deck[ CARDS ]; // Definiranje na niza od karti
// sto se pravi vo ovoj red ? - se inicijalizira niza so pokazuvaci kon broj (face),(as/1, dvojka, trojka, cetvorka, petka, sestka,sedumka, osumka, devetka, desetka, dzandar, kralica i kral)
const char *face[] = { "Ace", "Deuce", "Three", "Four", "Five",
"Six", "Seven", "Eight", "Nine", "Ten",
"Jack", "Queen", "King"};
// - se inicijalizira niza so pokazuvaci kon simbol (suit),( list, detelina, baklava i srce)
const char *suit[] = { "Hearts", "Diamonds", "Clubs", "Spades"};
srand( time( NULL ) ); // generiranje na random broevi
fillDeck( deck, face, suit );// vgo cituva shpilot so karti
shuffle( deck ); // mesanje na kartite
deal( deck ); // delenje na shpilot
} // end main
//vnes na string vo  Card structures
void fillDeck( Card * const wDeck, const char * wFace[],
const char * wSuit[] )
{
size_t i; 
// loop through wDeck
for ( i = 0; i < CARDS; ++i ) {
wDeck[ i ].face = wFace[ i % FACES ];
wDeck[ i ].suit = wSuit[ i / FACES ];
} // end for
} // end function fillDeck
// shuffle cards
void shuffle( Card * const wDeck )
{
size_t i; // sto e ovaa promenliva ? brojac
size_t j; // sto e ovaa promenliva i vo koi vrednosti se dvizi ? - varijabla,vrednost od 0-51
Card temp; // define temporary structure for swapping Cards
// loop through wDeck randomly swapping cards 
for ( i = 0; i < CARDS; ++i ) {
j = rand() % CARDS; //
temp = wDeck[ i ];
wDeck[ i ] = wDeck[ j ];
wDeck[ j ] = temp;
}// end for
} // end function shuffle
// deal cards
void deal( const Card * const wDeck )
{
size_t i; // counter
// loop through wDeck
for ( i = 0; i < CARDS; ++i ) {
printf( "%5s of %-8s%s", wDeck[ i ].face, wDeck[ i ].suit,
( i + 1 ) % 4 ? " " : "\n" );
} // end for
} // end function